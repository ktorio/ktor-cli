package i18n

var en = map[Message]string{
	CannotDetermineHomeDir:            "Cannot determine home directory",
	CannotDetermineProjectDir:         "Unable to determine project directory for project %s\n",
	ErrorInitLogFile:                  "Unable to initialize log file: %s\n",
	VersionInfo:                       "Ktor CLI version %s\n",
	LogHint:                           "You can find more information in the log: %s\n",
	ProjectCreated:                    "Project \"%s\" has been created in the directory %s.\n",
	JDKDetectedJavaHome:               "JDK is detected in JAVA_HOME=%s\n",
	JdkDetected:                       "Detected JDK %s\n",
	JdkFoundLocally:                   "JDK found locally %s\n",
	JdkDownloaded:                     "JDK has been downloaded to %s\n",
	JdkVerificationFailed:             "JDK Verification Failed. Trying again...",
	GenServerError:                    "Unexpected error occurred while connecting to the generation server. Please try again later.\n",
	GenServerTimeoutError:             "Timeout occurred while requesting the generation server. Please try again later.\n",
	NetworkError:                      "Unexpected network error occurred while connecting to the generation server. Please check your Internet connection.\n",
	InternalError:                     "An internal error occurred. Please file an issue on https://youtrack.jetbrains.com/newIssue?project=ktor\n",
	ProjectDirExist:                   "The project directory %s already exists.\n",
	NoPermsCreateProjectDir:           "Not enough permissions to create project directory %s.\n",
	ProjectExtractError:               "Unable to extract downloaded archive to the directory %s.\n",
	JdkExtractError:                   "Unable to extract downloaded JDK to the directory %s.\n",
	DirAlreadyExist:                   "The directory already exists.",
	UnableExtractJdk:                  "Unable to extract downloaded JDK.\n",
	UnableDownloadJdk:                 "Unable to download JDK %s for %s %s\n",
	JdkServerError:                    "Unexpected error occurred while connecting to a JDK server. Please try again later.\n",
	JdkServerDownloadError:            "An error occurred while downloading from a JDK server. Please try again later.\n",
	ChecksumVerificationFailed:        "Checksum verification for the downloaded JDK failed",
	UnableMakeFileExec:                "Unable to make %s file executable.\n",
	UnexpectedError:                   "Unexpected error occurred.\n",
	UnexpectedErrorWithArg:            "Unexpected error %s\n",
	UnableCreateStoreJdkDir:           "Unable to create a root directory %s to store downloaded JDKs.\n",
	UnrecognizedFlagsError:            "Unrecognized flags: %s\n",
	NoCommandError:                    "Expected a command",
	CommandNotFoundError:              "Command '%s' not found\n",
	CommandArgumentsError:             "Expected %d argument[s]: %s for the %s command\n",
	ToRunProject:                      "To run the project use the following commands:\n\n",
	JavaHomeJdkIdeaInstruction:        "You can also set the JAVA_HOME environment variable permanently or add the following JDK in the IntelliJ IDEA: \n",
	ToolSummary:                       "Ktor is a tool mainly for generating Ktor projects.\n\n",
	OptionsCaption:                    "The options are:",
	CommandsCaption:                   "The commands are:",
	VerifyingJdk:                      "Verifying %s...\n",
	CreatingDir:                       "Creating directory %s\n",
	Extracting:                        "Extracting %s to %s\n",
	RequestGenServer:                  "Requesting generation server...",
	ExtractingArchiveToDir:            "Extracting downloaded archive to directory %s\n",
	ExtractProjectArchive:             "Extracting project archive... ",
	MakeFileExec:                      "Making %s file executable\n",
	UsageLine:                         "Usage: ktor [options] <command> [arguments]\n\n",
	TermHeightSmall:                   "Terminal height %d is too small to display plugins",
	SelectedPluginsCount:              "%d plugins selected",
	ProjectNameCaption:                "Project name:",
	LocationCaption:                   "Location:",
	SearchPluginsCaption:              "Search for plugins:",
	CreateProjectButton:               "CREATE PROJECT (CTRL+G)",
	NoPluginsFound:                    "No plugins found by the search query",
	DirNotEmptyError:                  "Directory %s isn't empty",
	DirNotExist:                       "Directory %s doesn't exist",
	ProjectDirLong:                    "Project directory is too long",
	DownloadingJdk:                    "Downloading %s from %s\n",
	DownloadingJdkProgress:            "Downloading JDK... ",
	ExtractingJdkFiles:                "Extracting JDK files to %s\n",
	ExtractingJdkProgress:             "Extracting JDK... ",
	ByeMessage:                        "Goodbye!",
	UnableFetchPluginsError:           "Unable to fetch plugins from the generation server. Please restart the app.",
	FetchingJdk:                       "Fetching %s\n",
	DownloadingProjectArchiveProgress: "Downloading project archive... ",
}
